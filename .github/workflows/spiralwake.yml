name: SpiralWake CI/CD

permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install Python dependencies with retries
        run: |
          for i in {1..3}; do
            python -m pip install --upgrade pip
            pip install flake8
            pip install -r requirements.txt && break
            echo "Attempt $i failed, retrying..."
            sleep 5
          done || (echo "Dependency installation failed"; pip list; exit 1)
        continue-on-error: false

      - name: Lint Python
        run: flake8 backend --max-line-length=120

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install Node.js dependencies
        run: |
          cd frontend
          npm ci || npm install
        continue-on-error: false

      # Replace the problematic ESLint step with this updated version
      - name: Lint TypeScript
        run: |
          cd frontend
          # Create temporary ESLint config if it doesn't exist
          if [ ! -f .eslintrc.js ]; then
            echo "module.exports = {
              parser: '@typescript-eslint/parser',
              extends: [
                'eslint:recommended',
                'plugin:@typescript-eslint/recommended',
                'plugin:react/recommended',
                'plugin:react-hooks/recommended'
              ],
              plugins: ['@typescript-eslint', 'react', 'react-hooks'],
              env: {
                browser: true,
                es2021: true,
                node: true
              },
              settings: {
                react: {
                  version: 'detect'
                }
              },
              rules: {
                'react/react-in-jsx-scope': 'off',
                '@typescript-eslint/explicit-module-boundary-types': 'off',
                '@typescript-eslint/no-explicit-any': 'warn'
              }
            };" > .eslintrc.js
          fi
          # Run ESLint using npx
          npx eslint 'src/**/*.{ts,tsx}' --max-warnings 0

      - name: Install Solhint
        run: npm install -g solhint

      - name: Lint Solidity
        run: |
          solhint frontend/src/contracts/*.sol

  # Rest of the jobs remain exactly the same...
  test:
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      # ... (test job steps remain unchanged)

  build:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      # ... (build job steps remain unchanged)

  deploy:
    runs-on: ubuntu-22.04
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
    steps:
      # ... (deploy job steps remain unchanged)

  release:
    runs-on: ubuntu-22.04
    needs: deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      # ... (release job steps remain unchanged)
