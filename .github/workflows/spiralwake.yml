name: SpiralWake CI/CD

permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint Python
        run: flake8 backend --max-line-length=120

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Node.js dependencies
        working-directory: frontend
        run: |
          npm ci --no-audit --no-fund

      - name: Lint TypeScript
        working-directory: frontend
        run: npx eslint src --ext .ts,.tsx --fix

      - name: Lint Solidity
        working-directory: frontend
        run: npx solhint src/contracts/*.sol

  test:
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt pytest

      - name: Run Python tests
        run: pytest backend/tests

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        working-directory: frontend
        run: npm ci --no-audit --no-fund

      - name: Run TypeScript tests
        working-directory: frontend
        run: npm test -- --watchAll=false

      - name: Run Solidity tests
        working-directory: frontend
        run: npx hardhat test

  build:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        working-directory: frontend
        run: npm ci --no-audit --no-fund

      - name: Build APK
        working-directory: frontend
        run: npm run build:android
        env:
          CAPACITOR_ANDROID_STUDIO_PATH: /usr/local/android-studio/bin/studio.sh

      - name: Compile Contracts
        working-directory: frontend
        run: npx hardhat compile

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: spiralwake-apk
          path: frontend/android/app/build/outputs/apk/release/app-release.apk

  deploy:
    runs-on: ubuntu-22.04
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: spiralwake-apk
          path: artifacts/

      - name: Deploy to IPFS
        run: |
          npx ipfs-car --pack artifacts/app-release.apk --output app-release.car
          CID=$(npx web3.storage upload app-release.car)
          echo "IPFS_CID=$CID" >> $GITHUB_ENV

      - name: Deploy Contracts
        working-directory: frontend
        run: npx hardhat run scripts/deploy.js --network polygon_zkevm
        env:
          POLYGON_ZKEVM_PRIVATE_KEY: ${{ secrets.POLYGON_ZKEVM_PRIVATE_KEY }}
          POLYGON_ZKEVM_RPC_URL: https://rpc.polygon-zkevm.io

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            IPFS CID: ${{ env.IPFS_CID }}
            Contracts deployed to Polygon zkEVM
          files: artifacts/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}